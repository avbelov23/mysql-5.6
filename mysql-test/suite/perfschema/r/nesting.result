"================== con1 connected =================="
select "MARKER_BEGIN" as marker;
marker
MARKER_BEGIN
select "This is simple statement one" as payload;
payload
This is simple statement one
select "This is simple statement two" as payload;
payload
This is simple statement two
select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload;
$$
payload
This is the first part of a multi query
payload
And this is the second part of a multi query
payload
With a third part to make things complete
select "MARKER_END" as marker;
marker
MARKER_END
select "Con1 is done with payload" as status;
status
Con1 is done with payload
"================== con1 done =================="
set @con1_tid = (select thread_id from performance_schema.threads
where processlist_user = 'user1');
select (@con1_tid is not null) as expected;
expected
1
set @marker_begin = (select event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_BEGIN%" and thread_id = @con1_tid);
select (@marker_begin is not null) as expected;
expected
1
set @marker_end = (select end_event_id from performance_schema.events_statements_history_long
where sql_text like "%MARKER_END%" and thread_id = @con1_tid);
select (@marker_end is not null) as expected;
expected
1
show global status like "performance_schema%_lost";
Variable_name	Value
Performance_schema_accounts_lost	0
Performance_schema_client_attrs_lost	0
Performance_schema_cond_classes_lost	0
Performance_schema_cond_instances_lost	0
Performance_schema_digest_lost	0
Performance_schema_file_classes_lost	0
Performance_schema_file_handles_lost	0
Performance_schema_file_instances_lost	0
Performance_schema_hosts_lost	0
Performance_schema_index_stat_lost	0
Performance_schema_locker_lost	0
Performance_schema_memory_classes_lost	0
Performance_schema_metadata_lock_lost	0
Performance_schema_mutex_classes_lost	0
Performance_schema_mutex_instances_lost	0
Performance_schema_nested_statement_lost	0
Performance_schema_prepared_statements_lost	0
Performance_schema_program_lost	0
Performance_schema_rwlock_classes_lost	0
Performance_schema_rwlock_instances_lost	0
Performance_schema_session_connect_attrs_lost	0
Performance_schema_socket_classes_lost	0
Performance_schema_socket_instances_lost	0
Performance_schema_stage_classes_lost	0
Performance_schema_statement_classes_lost	0
Performance_schema_table_handles_lost	0
Performance_schema_table_instances_lost	0
Performance_schema_table_lock_stat_lost	0
Performance_schema_thread_classes_lost	0
Performance_schema_thread_instances_lost	0
Performance_schema_users_lost	0
select * from (
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
sql_text as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_statements_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
"(stage)" as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_stages_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
union
(
select (event_id - @marker_begin) as relative_event_id,
(end_event_id - @marker_begin) as relative_end_event_id,
event_name,
operation as comment,
nesting_event_type,
(nesting_event_id - @marker_begin) as relative_nesting_event_id
from performance_schema.events_waits_history_long
where (thread_id = @con1_tid)
and (@marker_begin <= event_id)
and (end_event_id <= @marker_end)
)
) all_events
order by relative_event_id asc;
relative_event_id	relative_end_event_id	event_name	comment	nesting_event_type	relative_nesting_event_id
0	18	statement/sql/select	select "MARKER_BEGIN" as marker	NULL	NULL
1	6	stage/sql/starting	(stage)	STATEMENT	0
2	2	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	1
3	3	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	1
4	4	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	1
5	5	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	1
6	6	wait/io/file/sql/query_log	write	STAGE	1
7	7	stage/sql/checking permissions	(stage)	STATEMENT	0
8	8	stage/sql/Opening tables	(stage)	STATEMENT	0
9	9	stage/sql/init	(stage)	STATEMENT	0
10	10	stage/sql/optimizing	(stage)	STATEMENT	0
11	11	stage/sql/executing	(stage)	STATEMENT	0
12	12	stage/sql/end	(stage)	STATEMENT	0
13	13	stage/sql/query end	(stage)	STATEMENT	0
14	14	stage/sql/closing tables	(stage)	STATEMENT	0
15	15	stage/sql/freeing items	(stage)	STATEMENT	0
16	18	stage/sql/cleaning up	(stage)	STATEMENT	0
17	17	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	16
18	18	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	16
19	19	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STATEMENT	0
20	20	idle	idle	NULL	NULL
21	39	statement/sql/select	select "This is simple statement one" as payload	NULL	NULL
22	27	stage/sql/starting	(stage)	STATEMENT	21
23	23	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	22
24	24	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	22
25	25	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	22
26	26	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	22
27	27	wait/io/file/sql/query_log	write	STAGE	22
28	28	stage/sql/checking permissions	(stage)	STATEMENT	21
29	29	stage/sql/Opening tables	(stage)	STATEMENT	21
30	30	stage/sql/init	(stage)	STATEMENT	21
31	31	stage/sql/optimizing	(stage)	STATEMENT	21
32	32	stage/sql/executing	(stage)	STATEMENT	21
33	33	stage/sql/end	(stage)	STATEMENT	21
34	34	stage/sql/query end	(stage)	STATEMENT	21
35	35	stage/sql/closing tables	(stage)	STATEMENT	21
36	36	stage/sql/freeing items	(stage)	STATEMENT	21
37	39	stage/sql/cleaning up	(stage)	STATEMENT	21
38	38	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	37
39	39	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	37
40	40	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STATEMENT	21
41	41	idle	idle	NULL	NULL
42	60	statement/sql/select	select "This is simple statement two" as payload	NULL	NULL
43	48	stage/sql/starting	(stage)	STATEMENT	42
44	44	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	43
45	45	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	43
46	46	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	43
47	47	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	43
48	48	wait/io/file/sql/query_log	write	STAGE	43
49	49	stage/sql/checking permissions	(stage)	STATEMENT	42
50	50	stage/sql/Opening tables	(stage)	STATEMENT	42
51	51	stage/sql/init	(stage)	STATEMENT	42
52	52	stage/sql/optimizing	(stage)	STATEMENT	42
53	53	stage/sql/executing	(stage)	STATEMENT	42
54	54	stage/sql/end	(stage)	STATEMENT	42
55	55	stage/sql/query end	(stage)	STATEMENT	42
56	56	stage/sql/closing tables	(stage)	STATEMENT	42
57	57	stage/sql/freeing items	(stage)	STATEMENT	42
58	60	stage/sql/cleaning up	(stage)	STATEMENT	42
59	59	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	58
60	60	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	58
61	61	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STATEMENT	42
62	62	idle	idle	NULL	NULL
63	79	statement/sql/select	select "This is the first part of a multi query" as payload;
select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
64	70	stage/sql/starting	(stage)	STATEMENT	63
65	65	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	64
66	66	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	64
67	67	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	64
68	68	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	64
69	69	wait/io/file/sql/query_log	write	STAGE	64
70	70	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	64
71	71	stage/sql/checking permissions	(stage)	STATEMENT	63
72	72	stage/sql/Opening tables	(stage)	STATEMENT	63
73	73	stage/sql/init	(stage)	STATEMENT	63
74	74	stage/sql/optimizing	(stage)	STATEMENT	63
75	75	stage/sql/executing	(stage)	STATEMENT	63
76	76	stage/sql/end	(stage)	STATEMENT	63
77	77	stage/sql/query end	(stage)	STATEMENT	63
78	78	stage/sql/closing tables	(stage)	STATEMENT	63
79	79	stage/sql/freeing items	(stage)	STATEMENT	63
80	94	statement/sql/select	select "And this is the second part of a multi query" as payload;
select "With a third part to make things complete" as payload	NULL	NULL
81	85	stage/sql/starting	(stage)	STATEMENT	80
82	82	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	81
83	83	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	81
84	84	wait/io/file/sql/query_log	write	STAGE	81
85	85	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	81
86	86	stage/sql/checking permissions	(stage)	STATEMENT	80
87	87	stage/sql/Opening tables	(stage)	STATEMENT	80
88	88	stage/sql/init	(stage)	STATEMENT	80
89	89	stage/sql/optimizing	(stage)	STATEMENT	80
90	90	stage/sql/executing	(stage)	STATEMENT	80
91	91	stage/sql/end	(stage)	STATEMENT	80
92	92	stage/sql/query end	(stage)	STATEMENT	80
93	93	stage/sql/closing tables	(stage)	STATEMENT	80
94	94	stage/sql/freeing items	(stage)	STATEMENT	80
95	111	statement/sql/select	select "With a third part to make things complete" as payload	NULL	NULL
96	99	stage/sql/starting	(stage)	STATEMENT	95
97	97	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	96
98	98	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	96
99	99	wait/io/file/sql/query_log	write	STAGE	96
100	100	stage/sql/checking permissions	(stage)	STATEMENT	95
101	101	stage/sql/Opening tables	(stage)	STATEMENT	95
102	102	stage/sql/init	(stage)	STATEMENT	95
103	103	stage/sql/optimizing	(stage)	STATEMENT	95
104	104	stage/sql/executing	(stage)	STATEMENT	95
105	105	stage/sql/end	(stage)	STATEMENT	95
106	106	stage/sql/query end	(stage)	STATEMENT	95
107	107	stage/sql/closing tables	(stage)	STATEMENT	95
108	108	stage/sql/freeing items	(stage)	STATEMENT	95
109	111	stage/sql/cleaning up	(stage)	STATEMENT	95
110	110	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	109
111	111	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	109
112	112	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STATEMENT	95
113	113	idle	idle	NULL	NULL
114	132	statement/sql/select	select "MARKER_END" as marker	NULL	NULL
115	120	stage/sql/starting	(stage)	STATEMENT	114
116	116	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	115
117	117	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	115
118	118	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	115
119	119	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	115
120	120	wait/io/file/sql/query_log	write	STAGE	115
121	121	stage/sql/checking permissions	(stage)	STATEMENT	114
122	122	stage/sql/Opening tables	(stage)	STATEMENT	114
123	123	stage/sql/init	(stage)	STATEMENT	114
124	124	stage/sql/optimizing	(stage)	STATEMENT	114
125	125	stage/sql/executing	(stage)	STATEMENT	114
126	126	stage/sql/end	(stage)	STATEMENT	114
127	127	stage/sql/query end	(stage)	STATEMENT	114
128	128	stage/sql/closing tables	(stage)	STATEMENT	114
129	129	stage/sql/freeing items	(stage)	STATEMENT	114
130	132	stage/sql/cleaning up	(stage)	STATEMENT	114
131	131	wait/synch/mutex/sql/THD::LOCK_thd_query	lock	STAGE	130
132	132	wait/synch/mutex/sql/THD::LOCK_thd_data	lock	STAGE	130
